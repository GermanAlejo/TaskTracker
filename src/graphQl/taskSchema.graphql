## Graph schema
    # Types
    type User {
        userId: ID!
        name: String!
        pass: String!
        tasks: [Task]
    }   

    type Task {
        taskId: ID!
        title: String
        description: String
        tags: [Tag]
        status: StatusEnum!
    }
      
    type Category {
        categoryId: String!
        name: String
        owner: User!
    }

    type Tag {
        name: String
    }

    # Inputs
    input UserInput {
        name: String!
        pass: String!
    }

    input TaskInput {
        title: String!
        description: String
        tags: [TagInput]
    }

    input TagInput {
        name: String
    }

    # Responses
    type NewUserResponse {
        code: String!
        success: Boolean!
        message: String!
        user: User
    }

    type NewTaskResponse {
        code: String!
        success: Boolean!
        message: String!
        task: Task
    }

    # Enums 
    enum StatusEnum {
        TODO
        WIP
        DONE
    }

    # The queries 
    type Query {
        user(name: String!): User!
        users: [User]!
        tasks: [Task]!
    }

    # The mutations
    type Mutation {
        newUser(userInput: UserInput!): NewUserResponse!
        newTask(taskInput: TaskInput!): NewTaskResponse!
    }
